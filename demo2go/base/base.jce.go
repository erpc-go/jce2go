// DO NOT EDIT IT.
// code generated by jce2go v1.0.
// source: base.jce
package base

import (
	"fmt"
	"io"

	"github.com/erpc-go/jce-codec"
)

// 占位使用，避免导入的这些包没有被使用
var _ = fmt.Errorf
var _ = io.ReadFull
var _ = jce.BYTE

// enum Code implement
type Code int32

const (
	CodeSuccess Code = 0
	CodeError   Code = 1
)

// const implement
const (
	ERPC_VERSION int16 = 0x01
	TUP_VERSION  int32 = 0x03
)

// Request struct implement
type Request struct {
	B int8 `json:"b" tag:"1"`
}

func (st *Request) resetDefault() {
}

// ReadFrom reads from io.Reader and put into struct.
func (st *Request) ReadFrom(r io.Reader) (n int64, err error) {
	var (
		have bool
		ty   jce.JceEncodeType
	)

	decoder := jce.NewDecoder(r)
	st.resetDefault()

	// [step 1] read B
	if err = decoder.ReadInt8(&st.B, 1, true); err != nil {
		return
	}

	_ = err
	_ = have
	_ = ty
	return
}

// WriteTo encode struct to io.Writer
func (st *Request) WriteTo(w io.Writer) (n int64, err error) {
	encoder := jce.NewEncoder(w)
	st.resetDefault()

	// [step 1] write B
	if err = encoder.WriteInt8(st.B, 1); err != nil {
		return
	}

	// flush to io.Writer
	err = encoder.Flush()
	return
}
